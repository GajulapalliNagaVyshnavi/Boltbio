# -*- coding: utf-8 -*-
"""Microarray.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tONuoLWrkr0BipJ0-OcT1Uw38nQZUiFZ
"""

import pandas as pd
import numpy as np

def load_data(filepath):
    chunks = pd.read_csv(filepath, chunksize=1000)
    data = pd.concat(chunks, ignore_index=True)
    return data

def normalize_data(data):
    numeric_data = data.select_dtypes(include=[np.number])
    ranks = np.argsort(numeric_data.values, axis=0)
    sorted_data = np.sort(numeric_data.values, axis=0)
    mean_sorted_data = np.mean(sorted_data, axis=1)
    quantile_norm_data = mean_sorted_data[ranks]
    quantile_norm_df = pd.DataFrame(quantile_norm_data, columns=numeric_data.columns, index=data.index)
    return quantile_norm_df

filepath = '/content/drive/MyDrive/Colab/micro.csv'

data = load_data(filepath)

data_normalized = normalize_data(data)

print(data_normalized)

from scipy import stats
def perform_differential_analysis(data):
    significant_genes = []

    for gene_id, expression_levels in data.iterrows():
        t_statistic, p_value = stats.ttest_1samp(expression_levels, 0.05)
        if p_value < 0.05:
            significant_genes.append(gene_id)
    return significant_genes

significant_genes = perform_differential_analysis(data_normalized)

print("Significant genes:", len(significant_genes))
